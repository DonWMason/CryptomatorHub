# we can override all these properties at runtime using microprofile config convention, e.g.:
# * using system properties `java -Dquarkus.http.port=8080 ...`
# * or env vars `QUARKUS_HTTP_PORT=8080`
# see: https://quarkus.io/guides/config-reference#configuration-sources

quarkus.http.port=9090

quarkus.oidc.application-type=web-app

quarkus.keycloak.devservices.service-name=quarkus-cryptomator-hub
quarkus.keycloak.devservices.image-name=quay.io/keycloak/keycloak:15.0.2
quarkus.keycloak.devservices.grant.type=code
%dev.quarkus.keycloak.devservices.create-realm=false
%test.quarkus.keycloak.devservices.create-realm=true

quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1
quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
quarkus.flyway.migrate-at-start=true

# insert test data into the database in dev/test mode
%dev.quarkus.flyway.locations=db/migration,db/test-migration
%test.quarkus.flyway.locations=db/migration,db/test-migration

# log Hibernate SQL statements including values, for dev-purpose only
quarkus.log.min-level=TRACE
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.bind-parameters=true

# allow cross-origin requests in DEV profile
%dev.quarkus.http.cors=true