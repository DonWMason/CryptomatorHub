# we can override all these properties at runtime using microprofile config convention, e.g.:
# * using system properties `java -Dquarkus.http.port=8080 ...`
# * or env vars `QUARKUS_HTTP_PORT=8080`
# see: https://quarkus.io/guides/config-reference#configuration-sources

# Connection Params for Keycloak Public Client (quarkus.oidc.auth-server-url may use network-private hostname)
hub.keycloak.public-url=http://localhost:8180/auth
hub.keycloak.realm=cryptomator

quarkus.resteasy.path=/api
%test.quarkus.resteasy.path=/

quarkus.http.port=8080

quarkus.oidc.application-type=service
quarkus.oidc.client-id=cryptomatorhub

# Keycloak dev service
%dev.quarkus.keycloak.devservices.realm-path=dev-realm.json
# TODO: realm-path needs to be in class path, i.e. under src/main/resources -> we might not want to include it in production jar though, so make use of maven profiles and specify optional resources https://github.com/quarkusio/quarkus-quickstarts/blob/f3f4939df30bcff062be126faaaeb58cb7c79fb6/security-keycloak-authorization-quickstart/pom.xml#L68-L75
%dev.quarkus.keycloak.devservices.realm-name=cryptomator
%dev.quarkus.keycloak.devservices.port=8180
%dev.quarkus.keycloak.devservices.service-name=quarkus-cryptomator-hub
%dev.quarkus.keycloak.devservices.image-name=quay.io/keycloak/keycloak:15.1.1
%dev.quarkus.oidc.devui.grant.type=code
# OIDC will be mocked during unit tests. Use fake auth url to prevent dev services to start:
%test.quarkus.oidc.auth-server-url=http://localhost:43210/dev/null

# Expose OpenAPI and SwaggerUI
quarkus.swagger-ui.enable=false
%dev.quarkus.swagger-ui.enable=true
%dev.quarkus.swagger-ui.title=Hub API
%dev.quarkus.swagger-ui.oauth-use-pkce-with-authorization-code-grant=true

# Database
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.driver=org.postgresql.Driver
quarkus.datasource.jdbc.transaction-requirement=off
quarkus.datasource.jdbc.max-size=16
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQL10Dialect
quarkus.hibernate-orm.database.globally-quoted-identifiers=true
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.jdbc.driver=org.h2.Driver
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1
%dev.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.driver=org.h2.Driver
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:test
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
quarkus.flyway.migrate-at-start=true

# log Hibernate SQL statements including values, for dev-purpose only
%dev.quarkus.log.min-level=TRACE
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.bind-parameters=true

# Allow cross-origin requests in DEV profile
%dev.quarkus.http.cors=true